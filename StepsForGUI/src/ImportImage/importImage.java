/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ImportImage;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Benten
 */
public class importImage extends javax.swing.JFrame implements MyLog {
    JLabel jlab = new JLabel(); 
    private BufferedImage img = null;
    private BufferedImage imgPrelucrata = null;
    private double[][] pozaBW = new double[1][1];
    private double[][] step2Result = new double[1][1]; // prima dimensiune este indicele coloana
    private double[][] step3Result = new double[1][1]; // prima dimensiune este indicele rand
    private Step4.Result step4Result = null;
    private JPanel rbfParamPanel = new JPanel();
    private JPanel liniarParamPanel = new JPanel();
    private String trainFile;
    private String testFile;
    /**
     * Creates new form importImage
     */
    public importImage() {
        initComponents();
        rbfParamPanel.add(new JLabel("par rbf 1"));
        rbfParamPanel.add(new JLabel("par rbf 2"));
        liniarParamPanel.add(new JLabel("par liniar 1"));
        liniarParamPanel.add(new JLabel("par liniar 2"));
        rbfParamPanel.setVisible(false);
        liniarParamPanel.setVisible(false);
        
        panelParamSVM.add(rbfParamPanel);
        panelParamSVM.add(liniarParamPanel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPaneGUI = new javax.swing.JTabbedPane();
        panelSteps = new javax.swing.JPanel();
        loadImgButton = new javax.swing.JButton();
        deleteImgButton = new javax.swing.JButton();
        step1Run = new javax.swing.JButton();
        PragStep1 = new javax.swing.JLabel();
        parametru = new javax.swing.JTextField();
        saveImgStep1 = new javax.swing.JButton();
        meniuLabel = new javax.swing.JLabel();
        step2Run = new javax.swing.JButton();
        nrIteratii = new javax.swing.JLabel();
        iteratii = new javax.swing.JTextField();
        step3Run = new javax.swing.JButton();
        step4Run = new javax.swing.JButton();
        exportStep4 = new javax.swing.JButton();
        jSP = new javax.swing.JScrollPane();
        initialImgLabel = new javax.swing.JLabel();
        imgProcSP = new javax.swing.JScrollPane();
        imgProcLabel = new javax.swing.JLabel();
        consolaSP = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        rezultatLabel = new javax.swing.JLabel();
        hLabel = new javax.swing.JLabel();
        hParam = new javax.swing.JTextField();
        lLabel = new javax.swing.JLabel();
        lParam = new javax.swing.JTextField();
        panelSVM = new javax.swing.JPanel();
        tabbedPaneParams = new javax.swing.JTabbedPane();
        panelLiniarSVM = new javax.swing.JPanel();
        panelParamSVM = new javax.swing.JPanel();
        gammaLiniarLabel = new javax.swing.JLabel();
        gammaLiniarParam = new javax.swing.JTextField();
        cLiniarLabel = new javax.swing.JLabel();
        cLiniarParam = new javax.swing.JTextField();
        rezultatAcurateteLiniar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panelRbfSVM = new javax.swing.JPanel();
        gammaRbfLabel = new javax.swing.JLabel();
        gammaRbfParam = new javax.swing.JTextField();
        cRbfLabel = new javax.swing.JLabel();
        cRbfParam = new javax.swing.JTextField();
        rezultatAcurateteRBF = new javax.swing.JLabel();
        runRBF = new javax.swing.JToggleButton();
        runRBF_auto = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        consolaRBF = new javax.swing.JTextArea();
        typeKernel = new javax.swing.JLabel();
        loadTrainDB = new javax.swing.JButton();
        loadTestDB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadImgButton.setText("Incarca poza");
        loadImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadImgButtonActionPerformed(evt);
            }
        });

        deleteImgButton.setText("Sterge poza");
        deleteImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImgButtonActionPerformed(evt);
            }
        });

        step1Run.setText("Generare pas 1");
        step1Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                step1RunActionPerformed(evt);
            }
        });

        PragStep1.setText("Prag :");

        parametru.setText("50");
        parametru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parametruActionPerformed(evt);
            }
        });

        saveImgStep1.setText("Save img");
        saveImgStep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveImgStep1ActionPerformed(evt);
            }
        });

        meniuLabel.setForeground(new java.awt.Color(0, 51, 255));
        meniuLabel.setText("Meniu");

        step2Run.setText("Generare pas 2");
        step2Run.setActionCommand("Step2");
        step2Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                step2RunActionPerformed(evt);
            }
        });

        nrIteratii.setText("  Nr. Iteratii :");

        iteratii.setText("50");
        iteratii.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iteratiiActionPerformed(evt);
            }
        });

        step3Run.setText("Generare pas 3");
        step3Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                step3RunActionPerformed(evt);
            }
        });

        step4Run.setText("Generare pas 4");
        step4Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                step4RunActionPerformed(evt);
            }
        });

        exportStep4.setText("Export train/test files");
        exportStep4.setEnabled(false);
        exportStep4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportStep4ActionPerformed(evt);
            }
        });

        initialImgLabel.setForeground(new java.awt.Color(0, 51, 255));
        initialImgLabel.setText("Poza initiala");

        imgProcLabel.setForeground(new java.awt.Color(0, 51, 255));
        imgProcLabel.setText("Poza prelucrata");

        consola.setEditable(false);
        consola.setColumns(20);
        consola.setRows(5);
        consolaSP.setViewportView(consola);

        rezultatLabel.setForeground(new java.awt.Color(0, 51, 255));
        rezultatLabel.setText("Rezultat");

        hLabel.setText("h=");

        hParam.setText("4");
        hParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hParamActionPerformed(evt);
            }
        });

        lLabel.setText("l=");

        lParam.setText("4");
        lParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lParamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelStepsLayout = new javax.swing.GroupLayout(panelSteps);
        panelSteps.setLayout(panelStepsLayout);
        panelStepsLayout.setHorizontalGroup(
            panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStepsLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(meniuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219)
                .addComponent(initialImgLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imgProcLabel)
                .addGap(202, 202, 202))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStepsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStepsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(PragStep1)
                        .addGap(5, 5, 5)
                        .addComponent(parametru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveImgStep1)
                        .addGap(48, 48, 48))
                    .addGroup(panelStepsLayout.createSequentialGroup()
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(step1Run, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(step4Run, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                .addComponent(step3Run, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(step2Run, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(exportStep4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelStepsLayout.createSequentialGroup()
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelStepsLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(hLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hParam, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(lLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lParam, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(deleteImgButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(loadImgButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                            .addGroup(panelStepsLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(nrIteratii)
                                .addGap(28, 28, 28)
                                .addComponent(iteratii, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rezultatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelStepsLayout.createSequentialGroup()
                            .addComponent(jSP, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(imgProcSP, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(consolaSP)))
                .addGap(47, 47, 47))
        );
        panelStepsLayout.setVerticalGroup(
            panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStepsLayout.createSequentialGroup()
                .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meniuLabel)
                    .addComponent(initialImgLabel)
                    .addComponent(imgProcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadImgButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStepsLayout.createSequentialGroup()
                        .addComponent(deleteImgButton)
                        .addGap(35, 35, 35)
                        .addComponent(step1Run)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parametru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveImgStep1)
                            .addComponent(PragStep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(step2Run)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nrIteratii, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iteratii, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(step3Run)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(step4Run)
                        .addGap(10, 10, 10)
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hLabel)
                            .addComponent(hParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lLabel)
                            .addComponent(lParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(exportStep4)
                        .addGap(302, 302, 302))
                    .addGroup(panelStepsLayout.createSequentialGroup()
                        .addGroup(panelStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSP, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addComponent(imgProcSP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rezultatLabel)
                        .addGap(2, 2, 2)
                        .addComponent(consolaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        tabbedPaneGUI.addTab("Prelucrare Pasi", null, panelSteps, "");

        javax.swing.GroupLayout panelParamSVMLayout = new javax.swing.GroupLayout(panelParamSVM);
        panelParamSVM.setLayout(panelParamSVMLayout);
        panelParamSVMLayout.setHorizontalGroup(
            panelParamSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 549, Short.MAX_VALUE)
        );
        panelParamSVMLayout.setVerticalGroup(
            panelParamSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 106, Short.MAX_VALUE)
        );

        gammaLiniarLabel.setText("gamma=");

        gammaLiniarParam.setText("5");
        gammaLiniarParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gammaLiniarParamActionPerformed(evt);
            }
        });

        cLiniarLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cLiniarLabel.setText("c=");
        cLiniarLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cLiniarParam.setText("1000");
        cLiniarParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cLiniarParamActionPerformed(evt);
            }
        });

        rezultatAcurateteLiniar.setText("In urma parametrilor introdusi acuratetea este:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(100, 44));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout panelLiniarSVMLayout = new javax.swing.GroupLayout(panelLiniarSVM);
        panelLiniarSVM.setLayout(panelLiniarSVMLayout);
        panelLiniarSVMLayout.setHorizontalGroup(
            panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gammaLiniarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cLiniarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cLiniarParam, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(gammaLiniarParam))
                .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(panelParamSVM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(rezultatAcurateteLiniar, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLiniarSVMLayout.setVerticalGroup(
            panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                        .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gammaLiniarLabel)
                            .addComponent(gammaLiniarParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rezultatAcurateteLiniar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLiniarSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cLiniarParam)
                                .addComponent(cLiniarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelLiniarSVMLayout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addComponent(panelParamSVM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))))
        );

        cLiniarLabel.getAccessibleContext().setAccessibleDescription("");

        tabbedPaneParams.addTab("Liniar", null, panelLiniarSVM, "");

        gammaRbfLabel.setText("gamma=");

        gammaRbfParam.setText("5");
        gammaRbfParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gammaRbfParamActionPerformed(evt);
            }
        });

        cRbfLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cRbfLabel.setText("c=");
        cRbfLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cRbfParam.setText("1000");
        cRbfParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cRbfParamActionPerformed(evt);
            }
        });

        rezultatAcurateteRBF.setText("In urma parametrilor introdusi acuratetea este:");

        runRBF.setText("RUN");
        runRBF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runRBFActionPerformed(evt);
            }
        });

        runRBF_auto.setText("Auto FInd Params");

        consolaRBF.setEditable(false);
        consolaRBF.setColumns(20);
        consolaRBF.setRows(5);
        jScrollPane2.setViewportView(consolaRBF);

        javax.swing.GroupLayout panelRbfSVMLayout = new javax.swing.GroupLayout(panelRbfSVM);
        panelRbfSVM.setLayout(panelRbfSVMLayout);
        panelRbfSVMLayout.setHorizontalGroup(
            panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRbfSVMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(runRBF)
                    .addGroup(panelRbfSVMLayout.createSequentialGroup()
                        .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gammaRbfLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cRbfLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cRbfParam)
                            .addComponent(gammaRbfParam, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(runRBF_auto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rezultatAcurateteRBF, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        panelRbfSVMLayout.setVerticalGroup(
            panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRbfSVMLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gammaRbfLabel)
                    .addComponent(gammaRbfParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rezultatAcurateteRBF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRbfSVMLayout.createSequentialGroup()
                        .addGroup(panelRbfSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cRbfParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cRbfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(runRBF))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(runRBF_auto)
                .addGap(23, 23, 23))
        );

        tabbedPaneParams.addTab("RBF", null, panelRbfSVM, "");

        typeKernel.setForeground(new java.awt.Color(0, 51, 255));
        typeKernel.setText("Alegeti tipul de kernel");

        loadTrainDB.setText("Incarca baza de date train");
        loadTrainDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTrainDBActionPerformed(evt);
            }
        });

        loadTestDB.setText("Incarca baza de date test");
        loadTestDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTestDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSVMLayout = new javax.swing.GroupLayout(panelSVM);
        panelSVM.setLayout(panelSVMLayout);
        panelSVMLayout.setHorizontalGroup(
            panelSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSVMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSVMLayout.createSequentialGroup()
                        .addComponent(typeKernel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelSVMLayout.createSequentialGroup()
                        .addGroup(panelSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tabbedPaneParams, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(loadTestDB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(loadTrainDB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 357, Short.MAX_VALUE))))
        );
        panelSVMLayout.setVerticalGroup(
            panelSVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSVMLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(loadTrainDB)
                .addGap(2, 2, 2)
                .addComponent(loadTestDB)
                .addGap(11, 11, 11)
                .addComponent(typeKernel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPaneParams, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(285, Short.MAX_VALUE))
        );

        tabbedPaneGUI.addTab("Clasificator SVM", null, panelSVM, "");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(tabbedPaneGUI, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(tabbedPaneGUI))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hParamActionPerformed

    private void exportStep4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportStep4ActionPerformed
        double ratio = 5 / 8.0;

        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Save train file database");
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            File fTrain = jfc.getSelectedFile();
            jfc.setDialogTitle("Save test file database");
            if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File fTest = jfc.getSelectedFile();
                saveTrainTestFile(step4Result, ratio, fTrain, fTest);
            }

        }
    }//GEN-LAST:event_exportStep4ActionPerformed

    private void step4RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_step4RunActionPerformed
        //int h = 4, l = 4;
        int h = Integer.parseInt(hParam.getText());
        int l = Integer.parseInt(lParam.getText());
        step4Result = Step4.run(step3Result, pozaBW, h, l);
        exportStep4.setEnabled(true);
    }//GEN-LAST:event_step4RunActionPerformed

    private void step3RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_step3RunActionPerformed
        step3Result = Step3.run(step2Result);
    }//GEN-LAST:event_step3RunActionPerformed

    private void iteratiiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iteratiiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iteratiiActionPerformed

    private void step2RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_step2RunActionPerformed
        int iteratie = Integer.parseInt(iteratii.getText());
        step2Result = Step2.run(pozaBW, 1, iteratie);
        step2Result = Step2.run(step2Result, 0, 1);

        int height = step2Result.length;
        int width = step2Result[0].length;
        BufferedImage imgToSHow = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        for (int col = 0; col < width; col++) {
            for (int row = 0; row < height; row++) {
                int pixel = (int) step2Result[row][col] * 255;
                Color cnew = new Color(pixel, pixel, pixel);
                imgToSHow.setRGB(col, row, cnew.getRGB());
            }
        }

        ImageIcon icon = new ImageIcon(ScaledImage(imgToSHow, jSP.getWidth(), jSP.getHeight()));
        jlab.setIcon(icon);
        //add jLabel to scroll pane
        imgProcSP.getViewport().add(jlab);
    }//GEN-LAST:event_step2RunActionPerformed

    private void saveImgStep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveImgStep1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (imgPrelucrata != null && jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File f = jfc.getSelectedFile();
                ImageIO.write(imgPrelucrata, "jpg", f);
            } catch (IOException e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_saveImgStep1ActionPerformed

    private void parametruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parametruActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parametruActionPerformed

    private void step1RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_step1RunActionPerformed
      //  int width = img.getWidth();
        //int height = img.getHeight();
        //imgPrelucrata = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        //imgPrelucrata.setData(img.getData());
        
        int width = 850;
        int height = 900;
        imgPrelucrata = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        imgPrelucrata.setData(img.getSubimage(248, 0, width, height).getRaster());
        
        int thresh = Integer.parseInt(parametru.getText());
        pozaBW = new double[height][width];

        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
                Color c = new Color(imgPrelucrata.getRGB(x, y));
                int red = c.getRed();
                int pixel = red < thresh ? 0 : 255;
                pozaBW[y][x] = red < thresh ? 0 : red == thresh ? 0.5 : 1; // poza cu prima dimensiune = randuri
                Color cnew = new Color(pixel, pixel, pixel);
                imgPrelucrata.setRGB(x, y, cnew.getRGB());
            }
        }
        ImageIcon icon = new ImageIcon(ScaledImage(imgPrelucrata, jSP.getWidth(), jSP.getHeight()));
        jlab.setIcon(icon);
        //add jLabel to scroll pane
        imgProcSP.getViewport().add(jlab);
    }//GEN-LAST:event_step1RunActionPerformed

    private void deleteImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImgButtonActionPerformed
        //remove image from jlabel jlab
        jlab.setIcon(null);
    }//GEN-LAST:event_deleteImgButtonActionPerformed

    private void loadImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadImgButtonActionPerformed
        //create file chooser
        JFileChooser jfc = new JFileChooser();
        jfc.setSelectedFile(new File("PICT0001_croped.JPG"));
        if (jfc.showOpenDialog(loadImgButton) == JFileChooser.APPROVE_OPTION) {
            img = null;
            try {
                java.io.File f = jfc.getSelectedFile();
                img = ImageIO.read(f);
            } catch (IOException e) {
                System.out.println(e);
            }
            ImageIcon icon = new ImageIcon(ScaledImage(img, jSP.getWidth(), jSP.getHeight()));
            jlab.setIcon(icon);
            //add jLabel to scroll pane
            jSP.getViewport().add(jlab);
        }
    }//GEN-LAST:event_loadImgButtonActionPerformed

    private void cRbfParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cRbfParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cRbfParamActionPerformed

    private void gammaRbfParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gammaRbfParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gammaRbfParamActionPerformed

    private void lParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lParamActionPerformed

    private void cLiniarParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cLiniarParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cLiniarParamActionPerformed

    private void gammaLiniarParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gammaLiniarParamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gammaLiniarParamActionPerformed

    private void loadTrainDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTrainDBActionPerformed
        JFileChooser jfc = new JFileChooser();
        int train = jfc.showOpenDialog(null);
         if (train== JFileChooser.APPROVE_OPTION) 
        {
            File file = jfc.getSelectedFile();
            trainFile= file.getAbsolutePath();
        }
    }//GEN-LAST:event_loadTrainDBActionPerformed

    private void loadTestDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTestDBActionPerformed
        JFileChooser jfc = new JFileChooser();
        int test = jfc.showOpenDialog(null);
         if (test== JFileChooser.APPROVE_OPTION) 
        {
            File file = jfc.getSelectedFile();
            testFile= file.getAbsolutePath();
        }
    }//GEN-LAST:event_loadTestDBActionPerformed

    private void runRBFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runRBFActionPerformed
        
    }//GEN-LAST:event_runRBFActionPerformed


    //functie care ma ajuta sa iau o parte din imagine
    private Image ScaledImage(Image img, int w, int h) {
        BufferedImage resizeImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_BGR);
        Graphics2D g2 = resizeImage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(img, 0, 0, w, h, null);
        g2.dispose();
        return resizeImage;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(importImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(importImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(importImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(importImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        importImage myFrame = new importImage();
        myFrame.setTitle("SVM");
        Utils.log = myFrame;
//        Utils.log = new ConsoleLog();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                myFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PragStep1;
    private javax.swing.JLabel cLiniarLabel;
    private javax.swing.JTextField cLiniarParam;
    private javax.swing.JLabel cRbfLabel;
    private javax.swing.JTextField cRbfParam;
    private javax.swing.JTextArea consola;
    private javax.swing.JTextArea consolaRBF;
    private javax.swing.JScrollPane consolaSP;
    private javax.swing.JButton deleteImgButton;
    private javax.swing.JButton exportStep4;
    private javax.swing.JLabel gammaLiniarLabel;
    private javax.swing.JTextField gammaLiniarParam;
    private javax.swing.JLabel gammaRbfLabel;
    private javax.swing.JTextField gammaRbfParam;
    private javax.swing.JLabel hLabel;
    private javax.swing.JTextField hParam;
    private javax.swing.JLabel imgProcLabel;
    private javax.swing.JScrollPane imgProcSP;
    private javax.swing.JLabel initialImgLabel;
    private javax.swing.JTextField iteratii;
    private javax.swing.JScrollPane jSP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lLabel;
    private javax.swing.JTextField lParam;
    private javax.swing.JButton loadImgButton;
    private javax.swing.JButton loadTestDB;
    private javax.swing.JButton loadTrainDB;
    private javax.swing.JLabel meniuLabel;
    private javax.swing.JLabel nrIteratii;
    private javax.swing.JPanel panelLiniarSVM;
    private javax.swing.JPanel panelParamSVM;
    private javax.swing.JPanel panelRbfSVM;
    private javax.swing.JPanel panelSVM;
    private javax.swing.JPanel panelSteps;
    private javax.swing.JTextField parametru;
    private javax.swing.JLabel rezultatAcurateteLiniar;
    private javax.swing.JLabel rezultatAcurateteRBF;
    private javax.swing.JLabel rezultatLabel;
    private javax.swing.JToggleButton runRBF;
    private javax.swing.JToggleButton runRBF_auto;
    private javax.swing.JButton saveImgStep1;
    private javax.swing.JButton step1Run;
    private javax.swing.JButton step2Run;
    private javax.swing.JButton step3Run;
    private javax.swing.JButton step4Run;
    private javax.swing.JTabbedPane tabbedPaneGUI;
    private javax.swing.JTabbedPane tabbedPaneParams;
    private javax.swing.JLabel typeKernel;
    // End of variables declaration//GEN-END:variables

    @Override
    public <T> void println(T t) {
        consola.append(t.toString() + "\n");
    }

    @Override
    public <T> void println(List<T> list) {
        consola.append("Urmeaza elemente lista:\n");
        for (T t : list) {
            consola.append(t.toString() + "\n");
        }
    }

    @Override
    public void println(double[][] d) {
        consola.append("\n\nUrmeaza elemente din matrice :\n");
        for (int row = 0; row < d.length; row++) {
            for (int col = 0; col < d[0].length; col++) {
                consola.append(d[row][col] + "  ");

            }
            consola.append("\n");
        }
    }

    private void saveTrainTestFile(Step4.Result step4Result, double ratio, File fTrain, File fTest) {
        int nrRandDinF = step4Result.F.length;
        int nrColDinF = step4Result.F[0].length;
        int N1 = (int) Math.round(ratio * nrRandDinF); //nr coloane
        double[][] labels_samples_Train = new double[N1][nrColDinF + 1];
        for (int i = 0; i < N1; i++) {
            labels_samples_Train[i][0] = step4Result.etichete[i].doubleValue();
            for (int j = 0; j < nrColDinF; j++) {
                labels_samples_Train[i][j + 1] = step4Result.F[i][j];
            }
        }
        FileUtils.writeFullInFile(fTrain.getAbsolutePath(), labels_samples_Train);

        double[][] labels_samples_Test = new double[nrRandDinF - N1][nrColDinF + 1];
        for (int i = N1; i < nrRandDinF; i++) {
            labels_samples_Test[i-N1][0] = step4Result.etichete[i].doubleValue();
            for (int j = 0; j < nrColDinF; j++) {
                labels_samples_Test[i-N1][j + 1] = step4Result.F[i][j];
            }
        }
        FileUtils.writeFullInFile(fTest.getAbsolutePath(), labels_samples_Test);

    }

}
